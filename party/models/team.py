# generated by datamodel-codegen:
#   filename:  https://api2.sibr.dev/mirror/teams
#   timestamp: 2023-01-23T17:10:17+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class CategoryRating(BaseModel):
    name: str
    stars: float


class Division(BaseModel):
    id: str
    name: str


class Modification(BaseModel):
    background_color: Optional[str] = Field(..., alias="backgroundColor")
    color: Optional[str]
    description: str
    icon: Optional[str]
    name: str
    text_color: Optional[str] = Field(..., alias="textColor")


class TeamModification(BaseModel):
    modification: Modification
    team_id: str = Field(..., alias="teamId")


class PlayerModification(BaseModel):
    modification: Modification
    player_id: str = Field(..., alias="playerId")


class RosterSlot(BaseModel):
    active: bool
    location: str
    order_index: Optional[int] = Field(..., alias="orderIndex")


class Roster(BaseModel):
    id: str
    modifications: list[PlayerModification]
    name: str
    overall_rating: float = Field(..., alias="overallRating")
    roster_slots: list[RosterSlot] = Field(..., alias="rosterSlots")


class Standing(BaseModel):
    losses: int
    season_id: str = Field(..., alias="seasonId")
    team_id: str = Field(..., alias="teamId")
    wins: int


class Team(BaseModel):
    active_team: bool = Field(..., alias="activeTeam")
    attributes: list
    category_ratings: list[CategoryRating] = Field(..., alias="categoryRatings")
    deceased: bool
    division: Division
    emoji: str
    id: str
    location_name: str = Field(..., alias="locationName")
    modifications: list[TeamModification]
    name: str
    nickname: str
    primary_color: str = Field(..., alias="primaryColor")
    roster: list[Roster]
    secondary_color: str = Field(..., alias="secondaryColor")
    shorthand: str
    slogan: str
    standings: list[Standing]
